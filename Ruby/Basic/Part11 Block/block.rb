# Session 1 块是什么
=begin
  块(代码块) 就是在调用方法时,能与参数一起传递的多个处理的集合。
  之前在介绍 each 方法、time 方法等与循环有关的部分时,我们就已经接触过块。
  接收块的方法会执行必要次数的块。块的执行次数由方法本身决定,因此不需事前指定,甚至有可能一次都不执行。

  正如在第 7 章中所介绍的那样,我们把这样的方法调用称为 “ 调用带块的方法 ” 或者 “ 调用块 ” 。
  块的调用方法一般采用以下形式。
    对象 . 方法名 ( 参数列表 ) do | 块变量 |
      希望循环的处理
    end
    
    或者
    对象 . 方法名 ( 参数列表 ) { | 块变量 |
      希望循环的处理
    }
=end

# 在下面的例子中,我们使用 each 方法,把保存在 Array 对象中的各个整数依次取 2 次幂后输出。
# do 和 end 之间的部分就是所谓的块。在本例中,块总共被执行了 5 次。
[1, 2, 3, 4, 5].each do |i|
puts i ** 2
end

# 块的开头是块变量。块变量就是在执行块的时候,从方法传进来的参数。不同方法的块变量个数也不相同。
# 例如,在 Array#each 方法中,数组的元素会作为块变量被逐个传递到块中。
# 而在 Array#each_with_index 方法中,则是 [ 元素 , 索引 ] 两个值被传递到块中。

ary = ["a", "b", "c"]
# each
ary.each{|obj| p obj}
# each_with_index
ary.each_with_index{|obj, idx|
  p [obj, idx]
}
